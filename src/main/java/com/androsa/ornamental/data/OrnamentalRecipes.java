package com.androsa.ornamental.data;

import com.androsa.ornamental.OrnamentalMod;
import com.androsa.ornamental.data.provider.OrnamentalRecipeProvider;
import com.androsa.ornamental.registry.ModBlocks;
import net.minecraft.core.HolderLookup;
import net.minecraft.data.PackOutput;
import net.minecraft.data.recipes.RecipeOutput;
import net.minecraft.world.item.Items;
import net.minecraft.world.level.block.Blocks;

import java.util.Optional;
import java.util.concurrent.CompletableFuture;

public class OrnamentalRecipes extends OrnamentalRecipeProvider {

    public OrnamentalRecipes(PackOutput output, CompletableFuture<HolderLookup.Provider> provider) {
        super(output, provider, OrnamentalMod.MODID);
    }

    @Override
    protected void buildRecipes(RecipeOutput consumer) {
        autoRecipe(consumer, new AutoRecipeManager(Blocks.IRON_BLOCK, Items.IRON_INGOT, ModBlocks.iron_slab.get(), Blocks.IRON_TRAPDOOR, Blocks.IRON_DOOR,
                Optional.of(ModBlocks.iron_stairs), false,
                Optional.of(ModBlocks.iron_slab), false,
                Optional.of(ModBlocks.iron_fence), false,
                Optional.empty(), false, false,
                Optional.of(ModBlocks.iron_fence_gate), false,
                Optional.empty(), false,
                Optional.of(ModBlocks.iron_pole), false,
                Optional.of(ModBlocks.iron_beam), false,
                Optional.of(ModBlocks.iron_wall), false,
                Optional.of(ModBlocks.iron_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.GOLD_BLOCK, Items.GOLD_INGOT, ModBlocks.gold_slab.get(), ModBlocks.gold_trapdoor.get(), ModBlocks.gold_door.get(),
                Optional.of(ModBlocks.gold_stairs), false,
                Optional.of(ModBlocks.gold_slab), false,
                Optional.of(ModBlocks.gold_fence), false,
                Optional.of(ModBlocks.gold_trapdoor), false, false,
                Optional.of(ModBlocks.gold_fence_gate), false,
                Optional.of(ModBlocks.gold_door), false,
                Optional.of(ModBlocks.gold_pole), false,
                Optional.of(ModBlocks.gold_beam), false,
                Optional.of(ModBlocks.gold_wall), false,
                Optional.of(ModBlocks.gold_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.DIAMOND_BLOCK, Items.DIAMOND, ModBlocks.diamond_slab.get(), ModBlocks.diamond_trapdoor.get(), ModBlocks.diamond_door.get(),
                Optional.of(ModBlocks.diamond_stairs), false,
                Optional.of(ModBlocks.diamond_slab), false,
                Optional.of(ModBlocks.diamond_fence), false,
                Optional.of(ModBlocks.diamond_trapdoor), false, false,
                Optional.of(ModBlocks.diamond_fence_gate), false,
                Optional.of(ModBlocks.diamond_door), false,
                Optional.of(ModBlocks.diamond_pole), false,
                Optional.of(ModBlocks.diamond_beam), false,
                Optional.of(ModBlocks.diamond_wall), false,
                Optional.of(ModBlocks.diamond_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.EMERALD_BLOCK, Items.EMERALD, ModBlocks.emerald_slab.get(), ModBlocks.emerald_trapdoor.get(), ModBlocks.emerald_door.get(),
                Optional.of(ModBlocks.emerald_stairs), false,
                Optional.of(ModBlocks.emerald_slab), false,
                Optional.of(ModBlocks.emerald_fence), false,
                Optional.of(ModBlocks.emerald_trapdoor), false, false,
                Optional.of(ModBlocks.emerald_fence_gate), false,
                Optional.of(ModBlocks.emerald_door), false,
                Optional.of(ModBlocks.emerald_pole), false,
                Optional.of(ModBlocks.emerald_beam), false,
                Optional.of(ModBlocks.emerald_wall), false,
                Optional.of(ModBlocks.emerald_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.LAPIS_BLOCK, Items.LAPIS_LAZULI, ModBlocks.lapis_slab.get(), ModBlocks.lapis_trapdoor.get(), ModBlocks.lapis_door.get(),
                Optional.of(ModBlocks.lapis_stairs), false,
                Optional.of(ModBlocks.lapis_slab), false,
                Optional.of(ModBlocks.lapis_fence), false,
                Optional.of(ModBlocks.lapis_trapdoor), false, false,
                Optional.of(ModBlocks.lapis_fence_gate), false,
                Optional.of(ModBlocks.lapis_door), false,
                Optional.of(ModBlocks.lapis_pole), false,
                Optional.of(ModBlocks.lapis_beam), false,
                Optional.of(ModBlocks.lapis_wall), false,
                Optional.of(ModBlocks.lapis_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.OBSIDIAN, ModBlocks.obsidian_slab.get(), ModBlocks.obsidian_slab.get(), ModBlocks.obsidian_trapdoor.get(), ModBlocks.obsidian_door.get(),
                Optional.of(ModBlocks.obsidian_stairs), false,
                Optional.of(ModBlocks.obsidian_slab), false,
                Optional.of(ModBlocks.obsidian_fence), false,
                Optional.of(ModBlocks.obsidian_trapdoor), false, false,
                Optional.of(ModBlocks.obsidian_fence_gate), false,
                Optional.of(ModBlocks.obsidian_door), false,
                Optional.of(ModBlocks.obsidian_pole), false,
                Optional.of(ModBlocks.obsidian_beam), false,
                Optional.of(ModBlocks.obsidian_wall), false,
                Optional.of(ModBlocks.obsidian_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.COAL_BLOCK, Items.COAL, ModBlocks.coal_slab.get(), ModBlocks.coal_trapdoor.get(), ModBlocks.coal_door.get(),
                Optional.of(ModBlocks.coal_stairs), false,
                Optional.of(ModBlocks.coal_slab), false,
                Optional.of(ModBlocks.coal_fence), false,
                Optional.of(ModBlocks.coal_trapdoor), true, false,
                Optional.of(ModBlocks.coal_fence_gate), false,
                Optional.of(ModBlocks.coal_door), false,
                Optional.of(ModBlocks.coal_pole), false,
                Optional.of(ModBlocks.coal_beam), false,
                Optional.of(ModBlocks.coal_wall), false,
                Optional.of(ModBlocks.coal_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.REDSTONE_BLOCK, Items.REDSTONE, ModBlocks.redstone_slab.get(), ModBlocks.redstone_trapdoor.get(), ModBlocks.redstone_door.get(),
                Optional.of(ModBlocks.redstone_stairs), false,
                Optional.of(ModBlocks.redstone_slab), false,
                Optional.of(ModBlocks.redstone_fence), false,
                Optional.of(ModBlocks.redstone_trapdoor), true, false,
                Optional.of(ModBlocks.redstone_fence_gate), false,
                Optional.of(ModBlocks.redstone_door), false,
                Optional.of(ModBlocks.redstone_pole), false,
                Optional.of(ModBlocks.redstone_beam), false,
                Optional.of(ModBlocks.redstone_wall), false,
                Optional.of(ModBlocks.redstone_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.CLAY, Items.CLAY_BALL, ModBlocks.clay_slab.get(), ModBlocks.clay_trapdoor.get(), ModBlocks.clay_door.get(),
                Optional.of(ModBlocks.clay_stairs), false,
                Optional.of(ModBlocks.clay_slab), false,
                Optional.of(ModBlocks.clay_fence), false,
                Optional.of(ModBlocks.clay_trapdoor), true, false,
                Optional.of(ModBlocks.clay_fence_gate), false,
                Optional.of(ModBlocks.clay_door), false,
                Optional.of(ModBlocks.clay_pole), false,
                Optional.of(ModBlocks.clay_beam), false,
                Optional.of(ModBlocks.clay_wall), false,
                Optional.of(ModBlocks.clay_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.DIRT, ModBlocks.dirt_slab.get(), ModBlocks.dirt_slab.get(), ModBlocks.dirt_trapdoor.get(), ModBlocks.dirt_door.get(),
                Optional.of(ModBlocks.dirt_stairs), false,
                Optional.of(ModBlocks.dirt_slab), false,
                Optional.of(ModBlocks.dirt_fence), false,
                Optional.of(ModBlocks.dirt_trapdoor), true, false,
                Optional.of(ModBlocks.dirt_fence_gate), false,
                Optional.of(ModBlocks.dirt_door), false,
                Optional.of(ModBlocks.dirt_pole), false,
                Optional.of(ModBlocks.dirt_beam), false,
                Optional.of(ModBlocks.dirt_wall), false,
                Optional.of(ModBlocks.dirt_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.GRASS_BLOCK, ModBlocks.grass_slab.get(), ModBlocks.grass_slab.get(), ModBlocks.grass_trapdoor.get(), ModBlocks.grass_door.get(),
                Optional.of(ModBlocks.grass_stairs), false,
                Optional.of(ModBlocks.grass_slab), false,
                Optional.of(ModBlocks.grass_fence), false,
                Optional.of(ModBlocks.grass_trapdoor), true, false,
                Optional.of(ModBlocks.grass_fence_gate), false,
                Optional.of(ModBlocks.grass_door), false,
                Optional.of(ModBlocks.grass_pole), false,
                Optional.of(ModBlocks.grass_beam), false,
                Optional.of(ModBlocks.grass_wall), false,
                Optional.of(ModBlocks.grass_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.HAY_BLOCK, Items.WHEAT, ModBlocks.hay_slab.get(), ModBlocks.hay_trapdoor.get(), ModBlocks.hay_door.get(),
                Optional.of(ModBlocks.hay_stairs), false,
                Optional.of(ModBlocks.hay_slab), false,
                Optional.of(ModBlocks.hay_fence), false,
                Optional.of(ModBlocks.hay_trapdoor), true, false,
                Optional.of(ModBlocks.hay_fence_gate), false,
                Optional.of(ModBlocks.hay_door), false,
                Optional.of(ModBlocks.hay_pole), false,
                Optional.of(ModBlocks.hay_beam), false,
                Optional.of(ModBlocks.hay_wall), false,
                Optional.of(ModBlocks.hay_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.DIRT_PATH, ModBlocks.path_slab.get(), ModBlocks.path_slab.get(), ModBlocks.path_trapdoor.get(), ModBlocks.path_door.get(),
                Optional.of(ModBlocks.path_stairs), false,
                Optional.of(ModBlocks.path_slab), false,
                Optional.of(ModBlocks.path_fence), false,
                Optional.of(ModBlocks.path_trapdoor), true, false,
                Optional.of(ModBlocks.path_fence_gate), false,
                Optional.of(ModBlocks.path_door), false,
                Optional.of(ModBlocks.path_pole), false,
                Optional.of(ModBlocks.path_beam), false,
                Optional.of(ModBlocks.path_wall), false,
                Optional.of(ModBlocks.path_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.BRICKS, Items.BRICK, Blocks.BRICK_SLAB, ModBlocks.brick_trapdoor.get(), ModBlocks.brick_door.get(),
                Optional.empty(), false,
                Optional.empty(), false,
                Optional.of(ModBlocks.brick_fence), false,
                Optional.of(ModBlocks.brick_trapdoor), true, false,
                Optional.of(ModBlocks.brick_fence_gate), false,
                Optional.of(ModBlocks.brick_door), false,
                Optional.of(ModBlocks.brick_pole), false,
                Optional.of(ModBlocks.brick_beam), false,
                Optional.empty(), false,
                Optional.of(ModBlocks.brick_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.QUARTZ_BLOCK, Items.QUARTZ, Blocks.QUARTZ_SLAB, ModBlocks.quartz_trapdoor.get(), ModBlocks.quartz_door.get(),
                Optional.empty(), false,
                Optional.empty(), false,
                Optional.of(ModBlocks.quartz_fence), false,
                Optional.of(ModBlocks.quartz_trapdoor), true, false,
                Optional.of(ModBlocks.quartz_fence_gate), false,
                Optional.of(ModBlocks.quartz_door), false,
                Optional.of(ModBlocks.quartz_pole), false,
                Optional.of(ModBlocks.quartz_beam), false,
                Optional.of(ModBlocks.quartz_wall), false,
                Optional.of(ModBlocks.quartz_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.BONE_BLOCK, Items.BONE_MEAL, ModBlocks.bone_slab.get(), ModBlocks.bone_trapdoor.get(), ModBlocks.bone_door.get(),
                Optional.of(ModBlocks.bone_stairs), false,
                Optional.of(ModBlocks.bone_slab), false,
                Optional.of(ModBlocks.bone_fence), false,
                Optional.of(ModBlocks.bone_trapdoor), true, false,
                Optional.of(ModBlocks.bone_fence_gate), false,
                Optional.of(ModBlocks.bone_door), false,
                Optional.of(ModBlocks.bone_pole), false,
                Optional.of(ModBlocks.bone_beam), false,
                Optional.of(ModBlocks.bone_wall), false,
                Optional.of(ModBlocks.bone_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.NETHER_BRICKS, Items.NETHER_BRICK, Blocks.NETHER_BRICK_SLAB, ModBlocks.nether_brick_trapdoor.get(), ModBlocks.nether_brick_door.get(),
                Optional.empty(), false,
                Optional.empty(), false,
                Optional.empty(), false,
                Optional.of(ModBlocks.nether_brick_trapdoor), true, false,
                Optional.of(ModBlocks.nether_brick_fence_gate), false,
                Optional.of(ModBlocks.nether_brick_door), false,
                Optional.of(ModBlocks.nether_brick_pole), false,
                Optional.of(ModBlocks.nether_brick_beam), false,
                Optional.empty(), false,
                Optional.of(ModBlocks.nether_brick_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.RED_NETHER_BRICKS, Items.NETHER_WART, Blocks.RED_NETHER_BRICK_SLAB, ModBlocks.red_nether_brick_trapdoor.get(), ModBlocks.red_nether_brick_door.get(),
                Optional.empty(), false,
                Optional.empty(), false,
                Optional.of(ModBlocks.red_nether_brick_fence), false,
                Optional.of(ModBlocks.red_nether_brick_trapdoor), true, false,
                Optional.of(ModBlocks.red_nether_brick_fence_gate), false,
                Optional.of(ModBlocks.red_nether_brick_door), false,
                Optional.of(ModBlocks.red_nether_brick_pole), false,
                Optional.of(ModBlocks.red_nether_brick_beam), false,
                Optional.empty(), false,
                Optional.of(ModBlocks.red_nether_brick_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.SNOW_BLOCK, Items.SNOWBALL, ModBlocks.snow_slab.get(), ModBlocks.snow_trapdoor.get(), ModBlocks.snow_door.get(),
                Optional.of(ModBlocks.snow_stairs), false,
                Optional.of(ModBlocks.snow_slab), true,
                Optional.of(ModBlocks.snow_fence), false,
                Optional.of(ModBlocks.snow_trapdoor), true, false,
                Optional.of(ModBlocks.snow_fence_gate), false,
                Optional.of(ModBlocks.snow_door), false,
                Optional.of(ModBlocks.snow_pole), false,
                Optional.of(ModBlocks.snow_beam), false,
                Optional.of(ModBlocks.snow_wall), false,
                Optional.of(ModBlocks.snow_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.ICE, ModBlocks.ice_slab.get(), ModBlocks.ice_slab.get(), ModBlocks.ice_trapdoor.get(), ModBlocks.ice_door.get(),
                Optional.of(ModBlocks.ice_stairs), false,
                Optional.of(ModBlocks.ice_slab), false,
                Optional.of(ModBlocks.ice_fence), false,
                Optional.of(ModBlocks.ice_trapdoor), true, false,
                Optional.of(ModBlocks.ice_fence_gate), false,
                Optional.of(ModBlocks.ice_door), false,
                Optional.of(ModBlocks.ice_pole), false,
                Optional.of(ModBlocks.ice_beam), false,
                Optional.of(ModBlocks.ice_wall), false,
                Optional.of(ModBlocks.ice_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.PACKED_ICE, ModBlocks.packed_ice_slab.get(), ModBlocks.packed_ice_slab.get(), ModBlocks.packed_ice_trapdoor.get(), ModBlocks.packed_ice_door.get(),
                Optional.of(ModBlocks.packed_ice_stairs), false,
                Optional.of(ModBlocks.packed_ice_slab), false,
                Optional.of(ModBlocks.packed_ice_fence), false,
                Optional.of(ModBlocks.packed_ice_trapdoor), true, false,
                Optional.of(ModBlocks.packed_ice_fence_gate), false,
                Optional.of(ModBlocks.packed_ice_door), false,
                Optional.of(ModBlocks.packed_ice_pole), false,
                Optional.of(ModBlocks.packed_ice_beam), false,
                Optional.of(ModBlocks.packed_ice_wall), false,
                Optional.of(ModBlocks.packed_ice_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.BLUE_ICE, ModBlocks.blue_ice_slab.get(), ModBlocks.blue_ice_slab.get(), ModBlocks.blue_ice_trapdoor.get(), ModBlocks.blue_ice_door.get(),
                Optional.of(ModBlocks.blue_ice_stairs), false,
                Optional.of(ModBlocks.blue_ice_slab), false,
                Optional.of(ModBlocks.blue_ice_fence), false,
                Optional.of(ModBlocks.blue_ice_trapdoor), true, false,
                Optional.of(ModBlocks.blue_ice_fence_gate), false,
                Optional.of(ModBlocks.blue_ice_door), false,
                Optional.of(ModBlocks.blue_ice_pole), false,
                Optional.of(ModBlocks.blue_ice_beam), false,
                Optional.of(ModBlocks.blue_ice_wall), false,
                Optional.of(ModBlocks.blue_ice_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.NETHERITE_BLOCK, Items.NETHERITE_INGOT, ModBlocks.netherite_slab.get(), ModBlocks.netherite_trapdoor.get(), ModBlocks.netherite_door.get(),
                Optional.of(ModBlocks.netherite_stairs), false,
                Optional.of(ModBlocks.netherite_slab), false,
                Optional.of(ModBlocks.netherite_fence), false,
                Optional.of(ModBlocks.netherite_trapdoor), false, false,
                Optional.of(ModBlocks.netherite_fence_gate), false,
                Optional.of(ModBlocks.netherite_door), false,
                Optional.of(ModBlocks.netherite_pole), false,
                Optional.of(ModBlocks.netherite_beam), false,
                Optional.of(ModBlocks.netherite_wall), false,
                Optional.of(ModBlocks.netherite_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.AMETHYST_BLOCK, Items.AMETHYST_SHARD, ModBlocks.amethyst_slab.get(), ModBlocks.amethyst_trapdoor.get(), ModBlocks.amethyst_door.get(),
                Optional.of(ModBlocks.amethyst_stairs), false,
                Optional.of(ModBlocks.amethyst_slab), false,
                Optional.of(ModBlocks.amethyst_fence), false,
                Optional.of(ModBlocks.amethyst_trapdoor), true, false,
                Optional.of(ModBlocks.amethyst_fence_gate), false,
                Optional.of(ModBlocks.amethyst_door), false,
                Optional.of(ModBlocks.amethyst_pole), false,
                Optional.of(ModBlocks.amethyst_beam), false,
                Optional.of(ModBlocks.amethyst_wall), false,
                Optional.of(ModBlocks.amethyst_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.COPPER_BLOCK, Items.COPPER_INGOT, ModBlocks.copper_slab.get(), ModBlocks.copper_trapdoor.get(), ModBlocks.copper_door.get(),
                Optional.of(ModBlocks.copper_stairs), false,
                Optional.of(ModBlocks.copper_slab), false,
                Optional.of(ModBlocks.copper_fence), false,
                Optional.of(ModBlocks.copper_trapdoor), false, false,
                Optional.of(ModBlocks.copper_fence_gate), false,
                Optional.of(ModBlocks.copper_door), false,
                Optional.of(ModBlocks.copper_pole), false,
                Optional.of(ModBlocks.copper_beam), false,
                Optional.of(ModBlocks.copper_wall), false,
                Optional.of(ModBlocks.copper_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.EXPOSED_COPPER, ModBlocks.exposed_copper_slab.get(), ModBlocks.exposed_copper_slab.get(), ModBlocks.exposed_copper_trapdoor.get(), ModBlocks.exposed_copper_door.get(),
                Optional.of(ModBlocks.exposed_copper_stairs), false,
                Optional.of(ModBlocks.exposed_copper_slab), false,
                Optional.of(ModBlocks.exposed_copper_fence), false,
                Optional.of(ModBlocks.exposed_copper_trapdoor), false, false,
                Optional.of(ModBlocks.exposed_copper_fence_gate), false,
                Optional.of(ModBlocks.exposed_copper_door), false,
                Optional.of(ModBlocks.exposed_copper_pole), false,
                Optional.of(ModBlocks.exposed_copper_beam), false,
                Optional.of(ModBlocks.exposed_copper_wall), false,
                Optional.of(ModBlocks.exposed_copper_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.WEATHERED_COPPER, ModBlocks.weathered_copper_slab.get(), ModBlocks.weathered_copper_slab.get(), ModBlocks.weathered_copper_trapdoor.get(), ModBlocks.weathered_copper_door.get(),
                Optional.of(ModBlocks.weathered_copper_stairs), false,
                Optional.of(ModBlocks.weathered_copper_slab), false,
                Optional.of(ModBlocks.weathered_copper_fence), false,
                Optional.of(ModBlocks.weathered_copper_trapdoor), false, false,
                Optional.of(ModBlocks.weathered_copper_fence_gate), false,
                Optional.of(ModBlocks.weathered_copper_door), false,
                Optional.of(ModBlocks.weathered_copper_pole), false,
                Optional.of(ModBlocks.weathered_copper_beam), false,
                Optional.of(ModBlocks.weathered_copper_wall), false,
                Optional.of(ModBlocks.weathered_copper_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.OXIDIZED_COPPER, ModBlocks.oxidized_copper_slab.get(), ModBlocks.oxidized_copper_slab.get(), ModBlocks.oxidized_copper_trapdoor.get(), ModBlocks.oxidized_copper_door.get(),
                Optional.of(ModBlocks.oxidized_copper_stairs), false,
                Optional.of(ModBlocks.oxidized_copper_slab), false,
                Optional.of(ModBlocks.oxidized_copper_fence), false,
                Optional.of(ModBlocks.oxidized_copper_trapdoor), false, false,
                Optional.of(ModBlocks.oxidized_copper_fence_gate), false,
                Optional.of(ModBlocks.oxidized_copper_door), false,
                Optional.of(ModBlocks.oxidized_copper_pole), false,
                Optional.of(ModBlocks.oxidized_copper_beam), false,
                Optional.of(ModBlocks.oxidized_copper_wall), false,
                Optional.of(ModBlocks.oxidized_copper_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.MAGMA_BLOCK, Items.MAGMA_CREAM, ModBlocks.magma_slab.get(), ModBlocks.magma_trapdoor.get(), ModBlocks.magma_door.get(),
                Optional.of(ModBlocks.magma_stairs), false,
                Optional.of(ModBlocks.magma_slab), false,
                Optional.of(ModBlocks.magma_fence), false,
                Optional.of(ModBlocks.magma_trapdoor), true, false,
                Optional.of(ModBlocks.magma_fence_gate), false,
                Optional.of(ModBlocks.magma_door), false,
                Optional.of(ModBlocks.magma_pole), false,
                Optional.of(ModBlocks.magma_beam), false,
                Optional.of(ModBlocks.magma_wall), false,
                Optional.of(ModBlocks.magma_saddle_door), false));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.CALCITE, ModBlocks.calcite_slab.get(), ModBlocks.calcite_slab.get(), ModBlocks.calcite_trapdoor.get(), ModBlocks.calcite_door.get(),
                Optional.of(ModBlocks.calcite_stairs), false,
                Optional.of(ModBlocks.calcite_slab), false,
                Optional.of(ModBlocks.calcite_fence), false,
                Optional.of(ModBlocks.calcite_trapdoor), false, false,
                Optional.of(ModBlocks.calcite_fence_gate), false,
                Optional.of(ModBlocks.calcite_door), false,
                Optional.of(ModBlocks.calcite_pole), false,
                Optional.of(ModBlocks.calcite_beam), false,
                Optional.of(ModBlocks.calcite_wall), false,
                Optional.of(ModBlocks.calcite_saddle_door), false));
    }
}