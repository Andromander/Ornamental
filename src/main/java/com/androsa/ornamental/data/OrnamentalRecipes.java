package com.androsa.ornamental.data;

import com.androsa.ornamental.OrnamentalMod;
import com.androsa.ornamental.data.provider.OrnamentalRecipeProvider;
import com.androsa.ornamental.registry.ModBlocks;
import net.minecraft.core.HolderLookup;
import net.minecraft.data.PackOutput;
import net.minecraft.data.recipes.RecipeOutput;
import net.minecraft.world.item.Items;
import net.minecraft.world.level.block.Blocks;

import java.util.Optional;
import java.util.concurrent.CompletableFuture;

public class OrnamentalRecipes extends OrnamentalRecipeProvider {

    public OrnamentalRecipes(PackOutput output, CompletableFuture<HolderLookup.Provider> provider) {
        super(output, provider, OrnamentalMod.MODID);
    }

    @Override
    protected void buildRecipes(RecipeOutput consumer) {
        autoRecipe(consumer, new AutoRecipeManager(Blocks.IRON_BLOCK, Items.IRON_INGOT, true,
                entry(ModBlocks.iron_stairs, false),
                entry(ModBlocks.iron_slab, false),
                entry(ModBlocks.iron_fence, false),
                Optional.empty(), false,
                entry(ModBlocks.iron_fence_gate, false),
                Optional.empty(),
                entry(ModBlocks.iron_pole, false),
                entry(ModBlocks.iron_beam, false),
                entry(ModBlocks.iron_wall, false),
                entry(ModBlocks.iron_saddle_door, false),
                entry(ModBlocks.iron_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.GOLD_BLOCK, Items.GOLD_INGOT, true,
                entry(ModBlocks.gold_stairs, false),
                entry(ModBlocks.gold_slab, false),
                entry(ModBlocks.gold_fence, false),
                entry(ModBlocks.gold_trapdoor, false), false,
                entry(ModBlocks.gold_fence_gate, false),
                entry(ModBlocks.gold_door, false),
                entry(ModBlocks.gold_pole, false),
                entry(ModBlocks.gold_beam, false),
                entry(ModBlocks.gold_wall, false),
                entry(ModBlocks.gold_saddle_door, false),
                entry(ModBlocks.gold_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.DIAMOND_BLOCK, Items.DIAMOND, true,
                entry(ModBlocks.diamond_stairs, false),
                entry(ModBlocks.diamond_slab, false),
                entry(ModBlocks.diamond_fence, false),
                entry(ModBlocks.diamond_trapdoor, false), false,
                entry(ModBlocks.diamond_fence_gate, false),
                entry(ModBlocks.diamond_door, false),
                entry(ModBlocks.diamond_pole, false),
                entry(ModBlocks.diamond_beam, false),
                entry(ModBlocks.diamond_wall, false),
                entry(ModBlocks.diamond_saddle_door, false),
                entry(ModBlocks.diamond_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.EMERALD_BLOCK, Items.EMERALD, true,
                entry(ModBlocks.emerald_stairs, false),
                entry(ModBlocks.emerald_slab, false),
                entry(ModBlocks.emerald_fence, false),
                entry(ModBlocks.emerald_trapdoor, false), false,
                entry(ModBlocks.emerald_fence_gate, false),
                entry(ModBlocks.emerald_door, false),
                entry(ModBlocks.emerald_pole, false),
                entry(ModBlocks.emerald_beam, false),
                entry(ModBlocks.emerald_wall, false),
                entry(ModBlocks.emerald_saddle_door, false),
                entry(ModBlocks.emerald_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.LAPIS_BLOCK, Items.LAPIS_LAZULI, true,
                entry(ModBlocks.lapis_stairs, false),
                entry(ModBlocks.lapis_slab, false),
                entry(ModBlocks.lapis_fence, false),
                entry(ModBlocks.lapis_trapdoor, false), false,
                entry(ModBlocks.lapis_fence_gate, false),
                entry(ModBlocks.lapis_door, false),
                entry(ModBlocks.lapis_pole, false),
                entry(ModBlocks.lapis_beam, false),
                entry(ModBlocks.lapis_wall, false),
                entry(ModBlocks.lapis_saddle_door, false),
                entry(ModBlocks.lapis_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.OBSIDIAN, ModBlocks.obsidian_slab.get(), true,
                entry(ModBlocks.obsidian_stairs, false),
                entry(ModBlocks.obsidian_slab, false),
                entry(ModBlocks.obsidian_fence, false),
                entry(ModBlocks.obsidian_trapdoor, false), false,
                entry(ModBlocks.obsidian_fence_gate, false),
                entry(ModBlocks.obsidian_door, false),
                entry(ModBlocks.obsidian_pole, false),
                entry(ModBlocks.obsidian_beam, false),
                entry(ModBlocks.obsidian_wall, false),
                entry(ModBlocks.obsidian_saddle_door, false),
                entry(ModBlocks.obsidian_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.COAL_BLOCK, Items.COAL, true,
                entry(ModBlocks.coal_stairs, false),
                entry(ModBlocks.coal_slab, false),
                entry(ModBlocks.coal_fence, false),
                entry(ModBlocks.coal_trapdoor, false), true,
                entry(ModBlocks.coal_fence_gate, false),
                entry(ModBlocks.coal_door, false),
                entry(ModBlocks.coal_pole, false),
                entry(ModBlocks.coal_beam, false),
                entry(ModBlocks.coal_wall, false),
                entry(ModBlocks.coal_saddle_door, false),
                entry(ModBlocks.coal_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.REDSTONE_BLOCK, Items.REDSTONE, true,
                entry(ModBlocks.redstone_stairs, false),
                entry(ModBlocks.redstone_slab, false),
                entry(ModBlocks.redstone_fence, false),
                entry(ModBlocks.redstone_trapdoor, false), true,
                entry(ModBlocks.redstone_fence_gate, false),
                entry(ModBlocks.redstone_door, false),
                entry(ModBlocks.redstone_pole, false),
                entry(ModBlocks.redstone_beam, false),
                entry(ModBlocks.redstone_wall, false),
                entry(ModBlocks.redstone_saddle_door, false),
                entry(ModBlocks.redstone_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.CLAY, Items.CLAY_BALL, false,
                entry(ModBlocks.clay_stairs, false),
                entry(ModBlocks.clay_slab, false),
                entry(ModBlocks.clay_fence, false),
                entry(ModBlocks.clay_trapdoor, false), true,
                entry(ModBlocks.clay_fence_gate, false),
                entry(ModBlocks.clay_door, false),
                entry(ModBlocks.clay_pole, false),
                entry(ModBlocks.clay_beam, false),
                entry(ModBlocks.clay_wall, false),
                entry(ModBlocks.clay_saddle_door, false),
                entry(ModBlocks.clay_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.DIRT, ModBlocks.dirt_slab.get(), false,
                entry(ModBlocks.dirt_stairs, false),
                entry(ModBlocks.dirt_slab, false),
                entry(ModBlocks.dirt_fence, false),
                entry(ModBlocks.dirt_trapdoor, false), true,
                entry(ModBlocks.dirt_fence_gate, false),
                entry(ModBlocks.dirt_door, false),
                entry(ModBlocks.dirt_pole, false),
                entry(ModBlocks.dirt_beam, false),
                entry(ModBlocks.dirt_wall, false),
                entry(ModBlocks.dirt_saddle_door, false),
                entry(ModBlocks.dirt_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.GRASS_BLOCK, ModBlocks.grass_slab.get(), false,
                entry(ModBlocks.grass_stairs, false),
                entry(ModBlocks.grass_slab, false),
                entry(ModBlocks.grass_fence, false),
                entry(ModBlocks.grass_trapdoor, false), true,
                entry(ModBlocks.grass_fence_gate, false),
                entry(ModBlocks.grass_door, false),
                entry(ModBlocks.grass_pole, false),
                entry(ModBlocks.grass_beam, false),
                entry(ModBlocks.grass_wall, false),
                entry(ModBlocks.grass_saddle_door, false),
                entry(ModBlocks.grass_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.HAY_BLOCK, Items.WHEAT, false,
                entry(ModBlocks.hay_stairs, false),
                entry(ModBlocks.hay_slab, false),
                entry(ModBlocks.hay_fence, false),
                entry(ModBlocks.hay_trapdoor, false), true,
                entry(ModBlocks.hay_fence_gate, false),
                entry(ModBlocks.hay_door, false),
                entry(ModBlocks.hay_pole, false),
                entry(ModBlocks.hay_beam, false),
                entry(ModBlocks.hay_wall, false),
                entry(ModBlocks.hay_saddle_door, false),
                entry(ModBlocks.hay_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.DIRT_PATH, ModBlocks.path_slab.get(), false,
                entry(ModBlocks.path_stairs, false),
                entry(ModBlocks.path_slab, false),
                entry(ModBlocks.path_fence, false),
                entry(ModBlocks.path_trapdoor, false), true,
                entry(ModBlocks.path_fence_gate, false),
                entry(ModBlocks.path_door, false),
                entry(ModBlocks.path_pole, false),
                entry(ModBlocks.path_beam, false),
                entry(ModBlocks.path_wall, false),
                entry(ModBlocks.path_saddle_door, false),
                entry(ModBlocks.path_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.BRICKS, Items.BRICK, true,
                Optional.empty(),
                Optional.empty(),
                entry(ModBlocks.brick_fence, false),
                entry(ModBlocks.brick_trapdoor, false), true,
                entry(ModBlocks.brick_fence_gate, false),
                entry(ModBlocks.brick_door, false),
                entry(ModBlocks.brick_pole, false),
                entry(ModBlocks.brick_beam, false),
                Optional.empty(),
                entry(ModBlocks.brick_saddle_door, false),
                entry(ModBlocks.brick_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.QUARTZ_BLOCK, Items.QUARTZ, true,
                Optional.empty(),
                Optional.empty(),
                entry(ModBlocks.quartz_fence, false),
                entry(ModBlocks.quartz_trapdoor, false), true,
                entry(ModBlocks.quartz_fence_gate, false),
                entry(ModBlocks.quartz_door, false),
                entry(ModBlocks.quartz_pole, false),
                entry(ModBlocks.quartz_beam, false),
                entry(ModBlocks.quartz_wall, false),
                entry(ModBlocks.quartz_saddle_door, false),
                entry(ModBlocks.quartz_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.BONE_BLOCK, Items.BONE_MEAL, true,
                entry(ModBlocks.bone_stairs, false),
                entry(ModBlocks.bone_slab, false),
                entry(ModBlocks.bone_fence, false),
                entry(ModBlocks.bone_trapdoor, false), true,
                entry(ModBlocks.bone_fence_gate, false),
                entry(ModBlocks.bone_door, false),
                entry(ModBlocks.bone_pole, false),
                entry(ModBlocks.bone_beam, false),
                entry(ModBlocks.bone_wall, false),
                entry(ModBlocks.bone_saddle_door, false),
                entry(ModBlocks.bone_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.NETHER_BRICKS, Items.NETHER_BRICK, true,
                Optional.empty(),
                Optional.empty(),
                Optional.empty(),
                entry(ModBlocks.nether_brick_trapdoor, false), true,
                entry(ModBlocks.nether_brick_fence_gate, false),
                entry(ModBlocks.nether_brick_door, false),
                entry(ModBlocks.nether_brick_pole, false),
                entry(ModBlocks.nether_brick_beam, false),
                Optional.empty(),
                entry(ModBlocks.nether_brick_saddle_door, false),
                entry(ModBlocks.nether_brick_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.RED_NETHER_BRICKS, Items.NETHER_WART, true,
                Optional.empty(),
                Optional.empty(),
                entry(ModBlocks.red_nether_brick_fence, false),
                entry(ModBlocks.red_nether_brick_trapdoor, false), true,
                entry(ModBlocks.red_nether_brick_fence_gate, false),
                entry(ModBlocks.red_nether_brick_door, false),
                entry(ModBlocks.red_nether_brick_pole, false),
                entry(ModBlocks.red_nether_brick_beam, false),
                Optional.empty(),
                entry(ModBlocks.red_nether_brick_saddle_door, false),
                entry(ModBlocks.red_nether_brick_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.SNOW_BLOCK, Items.SNOWBALL, false,
                entry(ModBlocks.snow_stairs, false),
                entry(ModBlocks.snow_slab, true),
                entry(ModBlocks.snow_fence, false),
                entry(ModBlocks.snow_trapdoor, false), true,
                entry(ModBlocks.snow_fence_gate, false),
                entry(ModBlocks.snow_door, false),
                entry(ModBlocks.snow_pole, false),
                entry(ModBlocks.snow_beam, false),
                entry(ModBlocks.snow_wall, false),
                entry(ModBlocks.snow_saddle_door, false),
                entry(ModBlocks.snow_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.ICE, ModBlocks.ice_slab.get(), true,
                entry(ModBlocks.ice_stairs, false),
                entry(ModBlocks.ice_slab, false),
                entry(ModBlocks.ice_fence, false),
                entry(ModBlocks.ice_trapdoor, false), true,
                entry(ModBlocks.ice_fence_gate, false),
                entry(ModBlocks.ice_door, false),
                entry(ModBlocks.ice_pole, false),
                entry(ModBlocks.ice_beam, false),
                entry(ModBlocks.ice_wall, false),
                entry(ModBlocks.ice_saddle_door, false),
                entry(ModBlocks.ice_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.PACKED_ICE, ModBlocks.packed_ice_slab.get(), true,
                entry(ModBlocks.packed_ice_stairs, false),
                entry(ModBlocks.packed_ice_slab, false),
                entry(ModBlocks.packed_ice_fence, false),
                entry(ModBlocks.packed_ice_trapdoor, false), true,
                entry(ModBlocks.packed_ice_fence_gate, false),
                entry(ModBlocks.packed_ice_door, false),
                entry(ModBlocks.packed_ice_pole, false),
                entry(ModBlocks.packed_ice_beam, false),
                entry(ModBlocks.packed_ice_wall, false),
                entry(ModBlocks.packed_ice_saddle_door, false),
                entry(ModBlocks.packed_ice_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.BLUE_ICE, ModBlocks.blue_ice_slab.get(), true,
                entry(ModBlocks.blue_ice_stairs, false),
                entry(ModBlocks.blue_ice_slab, false),
                entry(ModBlocks.blue_ice_fence, false),
                entry(ModBlocks.blue_ice_trapdoor, false), true,
                entry(ModBlocks.blue_ice_fence_gate, false),
                entry(ModBlocks.blue_ice_door, false),
                entry(ModBlocks.blue_ice_pole, false),
                entry(ModBlocks.blue_ice_beam, false),
                entry(ModBlocks.blue_ice_wall, false),
                entry(ModBlocks.blue_ice_saddle_door, false),
                entry(ModBlocks.blue_ice_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.NETHERITE_BLOCK, Items.NETHERITE_INGOT, true,
                entry(ModBlocks.netherite_stairs, false),
                entry(ModBlocks.netherite_slab, false),
                entry(ModBlocks.netherite_fence, false),
                entry(ModBlocks.netherite_trapdoor, false), false,
                entry(ModBlocks.netherite_fence_gate, false),
                entry(ModBlocks.netherite_door, false),
                entry(ModBlocks.netherite_pole, false),
                entry(ModBlocks.netherite_beam, false),
                entry(ModBlocks.netherite_wall, false),
                entry(ModBlocks.netherite_saddle_door, false),
                entry(ModBlocks.netherite_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.AMETHYST_BLOCK, Items.AMETHYST_SHARD, true,
                entry(ModBlocks.amethyst_stairs, false),
                entry(ModBlocks.amethyst_slab, false),
                entry(ModBlocks.amethyst_fence, false),
                entry(ModBlocks.amethyst_trapdoor, false), true,
                entry(ModBlocks.amethyst_fence_gate, false),
                entry(ModBlocks.amethyst_door, false),
                entry(ModBlocks.amethyst_pole, false),
                entry(ModBlocks.amethyst_beam, false),
                entry(ModBlocks.amethyst_wall, false),
                entry(ModBlocks.amethyst_saddle_door, false),
                entry(ModBlocks.amethyst_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.COPPER_BLOCK, Items.COPPER_INGOT, true,
                entry(ModBlocks.copper_stairs, false),
                entry(ModBlocks.copper_slab, false),
                entry(ModBlocks.copper_fence, false),
                entry(ModBlocks.copper_trapdoor, false), false,
                entry(ModBlocks.copper_fence_gate, false),
                entry(ModBlocks.copper_door, false),
                entry(ModBlocks.copper_pole, false),
                entry(ModBlocks.copper_beam, false),
                entry(ModBlocks.copper_wall, false),
                entry(ModBlocks.copper_saddle_door, false),
                entry(ModBlocks.copper_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.EXPOSED_COPPER, ModBlocks.exposed_copper_slab.get(), true,
                entry(ModBlocks.exposed_copper_stairs, false),
                entry(ModBlocks.exposed_copper_slab, false),
                entry(ModBlocks.exposed_copper_fence, false),
                entry(ModBlocks.exposed_copper_trapdoor, false), false,
                entry(ModBlocks.exposed_copper_fence_gate, false),
                entry(ModBlocks.exposed_copper_door, false),
                entry(ModBlocks.exposed_copper_pole, false),
                entry(ModBlocks.exposed_copper_beam, false),
                entry(ModBlocks.exposed_copper_wall, false),
                entry(ModBlocks.exposed_copper_saddle_door, false),
                entry(ModBlocks.exposed_copper_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.WEATHERED_COPPER, ModBlocks.weathered_copper_slab.get(), true,
                entry(ModBlocks.weathered_copper_stairs, false),
                entry(ModBlocks.weathered_copper_slab, false),
                entry(ModBlocks.weathered_copper_fence, false),
                entry(ModBlocks.weathered_copper_trapdoor, false), false,
                entry(ModBlocks.weathered_copper_fence_gate, false),
                entry(ModBlocks.weathered_copper_door, false),
                entry(ModBlocks.weathered_copper_pole, false),
                entry(ModBlocks.weathered_copper_beam, false),
                entry(ModBlocks.weathered_copper_wall, false),
                entry(ModBlocks.weathered_copper_saddle_door, false),
                entry(ModBlocks.weathered_copper_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.OXIDIZED_COPPER, ModBlocks.oxidized_copper_slab.get(), true,
                entry(ModBlocks.oxidized_copper_stairs, false),
                entry(ModBlocks.oxidized_copper_slab, false),
                entry(ModBlocks.oxidized_copper_fence, false),
                entry(ModBlocks.oxidized_copper_trapdoor, false), false,
                entry(ModBlocks.oxidized_copper_fence_gate, false),
                entry(ModBlocks.oxidized_copper_door, false),
                entry(ModBlocks.oxidized_copper_pole, false),
                entry(ModBlocks.oxidized_copper_beam, false),
                entry(ModBlocks.oxidized_copper_wall, false),
                entry(ModBlocks.oxidized_copper_saddle_door, false),
                entry(ModBlocks.oxidized_copper_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.MAGMA_BLOCK, Items.MAGMA_CREAM, true,
                entry(ModBlocks.magma_stairs, false),
                entry(ModBlocks.magma_slab, false),
                entry(ModBlocks.magma_fence, false),
                entry(ModBlocks.magma_trapdoor, false), true,
                entry(ModBlocks.magma_fence_gate, false),
                entry(ModBlocks.magma_door, false),
                entry(ModBlocks.magma_pole, false),
                entry(ModBlocks.magma_beam, false),
                entry(ModBlocks.magma_wall, false),
                entry(ModBlocks.magma_saddle_door, false),
                entry(ModBlocks.magma_support, false)));
        autoRecipe(consumer, new AutoRecipeManager(Blocks.CALCITE, ModBlocks.calcite_slab.get(), true,
                entry(ModBlocks.calcite_stairs, false),
                entry(ModBlocks.calcite_slab, false),
                entry(ModBlocks.calcite_fence, false),
                entry(ModBlocks.calcite_trapdoor, false), false,
                entry(ModBlocks.calcite_fence_gate, false),
                entry(ModBlocks.calcite_door, false),
                entry(ModBlocks.calcite_pole, false),
                entry(ModBlocks.calcite_beam, false),
                entry(ModBlocks.calcite_wall, false),
                entry(ModBlocks.calcite_saddle_door, false),
                entry(ModBlocks.calcite_support, false)));

        saddleDoor(consumer, ModBlocks.iron_saddle_door, Blocks.IRON_TRAPDOOR, false);
        saddleDoorFromDoor(consumer, ModBlocks.iron_saddle_door, Blocks.IRON_DOOR);
        pole(consumer, ModBlocks.quartz_pole, Blocks.QUARTZ_BLOCK, Blocks.QUARTZ_SLAB, false, true);
        beam(consumer, ModBlocks.quartz_beam, Blocks.QUARTZ_BLOCK, Blocks.QUARTZ_SLAB, false, true);
        pole(consumer, ModBlocks.brick_pole, Blocks.BRICKS, Blocks.BRICK_SLAB, false, true);
        beam(consumer, ModBlocks.brick_beam, Blocks.BRICKS, Blocks.BRICK_SLAB, false, true);
        pole(consumer, ModBlocks.nether_brick_pole, Blocks.NETHER_BRICKS, Blocks.NETHER_BRICK_SLAB, false, true);
        beam(consumer, ModBlocks.nether_brick_beam, Blocks.NETHER_BRICKS, Blocks.NETHER_BRICK_SLAB, false, true);
        pole(consumer, ModBlocks.red_nether_brick_pole, Blocks.RED_NETHER_BRICKS, Blocks.RED_NETHER_BRICK_SLAB, false, true);
        beam(consumer, ModBlocks.red_nether_brick_beam, Blocks.RED_NETHER_BRICKS, Blocks.RED_NETHER_BRICK_SLAB, false, true);
    }
}